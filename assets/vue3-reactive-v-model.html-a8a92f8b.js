const e=JSON.parse(`{"key":"v-1f511dda","path":"/summarize/in-action/vue3-reactive-v-model.html","title":"vue3 reactive + v-model 双向绑定","lang":"zh-Hans","frontmatter":{"description":"这个组件想要通过 v-model 双向绑定一个对象，点按钮的时候再更新 modelValue。 问题出在调用上。我在调用时，直接传递了一个 reactive。 我们都知道，vue2 选项式 API 的时候，直接通过 v-model 双向绑定一个对象不是什么大问题。但在 vue3 组合式 API，你无法直接修改一个响应式对象，即使这个响应式对象是用 le...","head":[["meta",{"property":"og:url","content":"https://modyqyw.top/summarize/in-action/vue3-reactive-v-model.html"}],["meta",{"property":"og:site_name","content":"ModyQyW's Site"}],["meta",{"property":"og:title","content":"vue3 reactive + v-model 双向绑定"}],["meta",{"property":"og:description","content":"这个组件想要通过 v-model 双向绑定一个对象，点按钮的时候再更新 modelValue。 问题出在调用上。我在调用时，直接传递了一个 reactive。 我们都知道，vue2 选项式 API 的时候，直接通过 v-model 双向绑定一个对象不是什么大问题。但在 vue3 组合式 API，你无法直接修改一个响应式对象，即使这个响应式对象是用 le..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-04-07T05:58:32.000Z"}],["meta",{"property":"og:locale","content":"zh-Hans"}],["meta",{"property":"article:modified_time","content":"2022-04-07T05:58:32.000Z"}]]},"headers":[],"git":{"updatedTime":1649311112000,"contributors":[{"name":"ModyQyW","email":"wurui-dev@formail.com","commits":1}]},"filePathRelative":"summarize/in-action/vue3-reactive-v-model.md","autoDesc":true}`);export{e as data};
