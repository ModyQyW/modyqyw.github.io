import{_ as e,M as p,p as o,q as c,R as n,t as s,N as l,a1 as i}from"./framework-7db056f4.js";const r={},t=n("h1",{id:"demo01-一个简单的-demo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#demo01-一个简单的-demo","aria-hidden":"true"},"#"),s(" demo01 - 一个简单的 demo")],-1),d=n("p",null,[s("前面简单地讲述了 "),n("code",null,"webpack"),s(" 的几个基本概念，下面开始实战来强化这些概念。")],-1),D=n("p",null,"这里再强调一次，笔记和示例是用 macOS 做示例的，请不要无脑跟做。",-1),y={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> bash</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你已经安装了 node，你也可以考虑完全卸载 node 之后安装 nvm。如果不需要频繁更换 node 版本，可以直接安装 node。</p><p>安装 nvm 之后，使用 nvm 来安装 node v14。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">nvm install 14</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>新建一个 <code>demo</code> 文件夹，进入该文件夹，用 <code>npm</code> 初始化，这会在当前目录下生成一个默认的 <code>package.json</code> 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">mkdir demo </span><span style="color:#8B949E;"># 新建一个 demo 文件夹</span></span>
<span class="line"><span style="color:#79C0FF;">cd</span><span style="color:#C9D1D9;"> demo </span><span style="color:#8B949E;"># 进入该文件夹</span></span>
<span class="line"><span style="color:#C9D1D9;">npm init -y </span><span style="color:#8B949E;"># npm 初始化</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根目录下新建一个 <code>.npmrc</code> 文件用来配置 <code>npm</code>，这里我们指定依赖源是国内的淘宝源，这样安装依赖的速度会更快一点。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">registry=https://registry.npmmirror.com/</span></span>
<span class="line"><span style="color:#C9D1D9;">chromedriver_cdnurl=https://npmmirror.com/mirrors/chromedriver/</span></span>
<span class="line"><span style="color:#C9D1D9;">electron_builder_binaries_mirror=https://npmmirror.com/mirrors/electron-builder-binaries/</span></span>
<span class="line"><span style="color:#C9D1D9;">electron_mirror=https://npmmirror.com/mirrors/electron/</span></span>
<span class="line"><span style="color:#C9D1D9;">fsevents_binary_host_mirror=http://npmmirror.com/mirrors/fsevents/</span></span>
<span class="line"><span style="color:#C9D1D9;">node_inspector_cdnurl=https://npmmirror.com/mirrors/node-inspector/</span></span>
<span class="line"><span style="color:#C9D1D9;">phantomjs_cdnurl=https://npmmirror.com/mirrors/phantomjs/</span></span>
<span class="line"><span style="color:#C9D1D9;">sass_binary_site=https://npmmirror.com/mirrors/node-sass/</span></span>
<span class="line"><span style="color:#C9D1D9;">selenium_cdnurl=https://npmmirror.com/mirrors/selenium/</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后安装相关依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm i clean-webpack-plugin@~3.0.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i copy-webpack-plugin@~6.4.1 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i friendly-errors-webpack-plugin@~1.7.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i html-webpack-plugin@~4.5.2 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i webpack@~4.46.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i webpack-cli@~4.7.2 -D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建一个内容简单的 <code>\${PROJECT_DIR}/src/index.js</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">document.</span><span style="color:#D2A8FF;">write</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;Hello webpack!&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建一个 <code>webpack</code> 配置文件 <code>\${PROJECT_DIR}/webpack.config.js</code>。不特意指定配置文件的时候，<code>webpack</code> 会默认使用这个文件作为配置文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// 使用 path 模块来指定路径</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">path</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 mode</span></span>
<span class="line"><span style="color:#C9D1D9;">  mode: </span><span style="color:#A5D6FF;">&#39;production&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 entry</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.js&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 output</span></span>
<span class="line"><span style="color:#C9D1D9;">  output: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    path: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;dist&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    filename: </span><span style="color:#A5D6FF;">&#39;bundle.js&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们再来修改 <code>package.json</code> 里面的 <code>scripts</code> 字段。这样，我们就能通过 <code>webpack-cli</code> 提供的命令调用 <code>webpack</code> 构建。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;build&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;webpack&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，就执行命令开始构建吧。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm run build</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>构建结束后，我们可以看到，在 <code>dist</code> 文件夹里面会出现一个 <code>bundle.js</code> 文件。但是我们还需要手动创建一个 <code>.html</code> 文件然后引用它，才能正常使用。</p><p>实际开发的时候，每次构建之后都耗费时间去做这样的重复工作是难以忍受的。我们需要一些自动处理的手段，来帮我们自动生成 <code>.html</code> 文件并引用这个 <code>bundle.js</code> 文件。</p><p>项目根目录新建一个 <code>public</code> 文件夹，里面放 <code>favicon.ico</code>（可以自己随便找一个，或者把你现在有的图片转成 ico 格式）和 <code>index.html</code>。</p><p><code>index.html</code> 里面的内容列出在下面。我们在 L7 引用了 <code>favicon.ico</code> 作为网站图标。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">&lt;!</span><span style="color:#7EE787;">DOCTYPE</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">html</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">lang</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;en&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">charset</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;UTF-8&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">name</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;viewport&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">meta</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">http-equiv</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;X-UA-Compatible&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">content</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;IE=edge,chrome=1&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">link</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">href</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;favicon.ico&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">type</span><span style="color:#C9D1D9;">=</span><span style="color:#A5D6FF;">&quot;image/x-icon&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;demo01&lt;/</span><span style="color:#7EE787;">title</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">head</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;&lt;/</span><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">&lt;/</span><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，我们在 <code>\${PROJECT_DIR}/webpack.config.js</code> 里配置，让 <code>copy-webpack-plugin</code> 来处理网站图标，让 <code>html-webpack-plugin</code> 处理 <code>.html</code> 文件里的引用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">CopyPlugin</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;copy-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">HtmlPlugin</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;html-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 entry</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.js&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 output</span></span>
<span class="line"><span style="color:#C9D1D9;">  output: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    path: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;dist&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    filename: </span><span style="color:#A5D6FF;">&#39;bundle.js&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 复制 \${PROJECT_DIR}/public/favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 最终生成 \${PROJECT_DIR}/dist/favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CopyPlugin</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">      patterns: [{ from: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;public&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;favicon.ico&#39;</span><span style="color:#C9D1D9;">) }],</span></span>
<span class="line"><span style="color:#C9D1D9;">    }),</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 使用 \${PROJECT_DIR}/public/index.html 作为模板</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 最终生成 \${PROJECT_DIR}/dist/index.html</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">HtmlPlugin</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">      title: </span><span style="color:#A5D6FF;">&#39;demo01&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      template: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;public&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.html&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    }),</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>copy-webpack-plugin</code> 会把 <code>favicon.ico</code> 复制到输出目录下（在这个例子里面，输出目录就是 <code>\${PROJECT_DIR}/dist</code>）作为网站图标。</li><li><code>html-webpack-plugin</code> 会使用 <code>\${PROJECT_DIR}/public/index.html</code> 作为承载 <code>bundle.js</code> 和 <code>favicon.ico</code> 的模板，最终会生成 <code>\${PROJECT_DIR}/dist/index.html</code>，这个文件会自动引用相关的 <code>.js</code> 文件。</li></ul><p>重新构建，构建结束之后，我们会发现 <code>\${PROJECT_DIR}/dist</code> 里面出现了三个文件：<code>favicon.ico</code>，<code>index.html</code> 和 <code>bundle.js</code>，而 <code>index.html</code> 中还自动引用了 <code>bundle.js</code>。</p><p>一切都很完美，但不能忽视的是，每次构建之前都应该删除上一次的构建包，也就是删除 <code>\${PROJECT_DIR}/dist</code>。目前不删除不会有什么影响，但以后构建出来的文件越来越多，不删除可能会导致新旧构建冲突、<code>\${PROJECT_DIR}/dist</code> 越来越大、<code>\${PROJECT_DIR}/dist</code> 里面的文件越来越多等问题。</p><p>我们可以使用 <code>clean-webpack-plugin</code> 来解决这个问题，默认地，<code>clean-webpack-plugin</code> 会根据 <code>output.path</code> 自动确认、删除上一次构建的结果。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> { </span><span style="color:#FFA657;">CleanWebpackPlugin</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">CleanPlugin</span><span style="color:#C9D1D9;"> } </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;clean-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 移除上一次的构建文件</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CleanPlugin</span><span style="color:#C9D1D9;">(),</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果构建出现了问题，<code>webpack</code> 会输出一长串错误信息，使用 <code>friendly-errors-webpack-plugin</code> 可以让输出的错误信息更加友好。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">FriendlyErrorsPlugin</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;friendly-errors-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 显示友好的错误信息</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">FriendlyErrorsPlugin</span><span style="color:#C9D1D9;">(),</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整的 <code>webpack.config.js</code> 代码列写在下面。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// 使用 path 模块来指定路径</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">path</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#8B949E;">// 使用 plugin</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> { </span><span style="color:#FFA657;">CleanWebpackPlugin</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">CleanPlugin</span><span style="color:#C9D1D9;"> } </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;clean-webpack-plugin&#39;)</span><span style="color:#FFA198;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">const CopyPlugin </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;copy-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">const HtmlPlugin </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;html-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">const FriendlyErrorsPlugin </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;friendly-errors-webpack-plugin&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 mode</span></span>
<span class="line"><span style="color:#C9D1D9;">  mode: </span><span style="color:#A5D6FF;">&#39;production&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 entry</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.js&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 output</span></span>
<span class="line"><span style="color:#C9D1D9;">  output: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    path: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;dist&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    filename: </span><span style="color:#A5D6FF;">&#39;bundle.js&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 plugin</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 显示友好的错误信息</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">FriendlyErrorsPlugin</span><span style="color:#C9D1D9;">(),</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 移除上一次的构建文件</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CleanPlugin</span><span style="color:#C9D1D9;">(),</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 复制 \${PROJECT_DIR}/public/favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 最终生成 \${PROJECT_DIR}/dist/favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">CopyPlugin</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">      patterns: [{ from: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;public&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;favicon.ico&#39;</span><span style="color:#C9D1D9;">) }],</span></span>
<span class="line"><span style="color:#C9D1D9;">    }),</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 使用 \${PROJECT_DIR}/public/index.html 作为模板</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 最终生成 \${PROJECT_DIR}/dist/index.html</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">HtmlPlugin</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">      title: </span><span style="color:#A5D6FF;">&#39;demo01&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      template: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;public&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.html&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    }),</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新开始构建，之后可以看到简短的提示信息。下面是最终的目录结构（省略了<code>node_modules</code>）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#79C0FF;">.</span></span>
<span class="line"><span style="color:#C9D1D9;">├── dist</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── bundle.js</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">│   └── index.html</span></span>
<span class="line"><span style="color:#C9D1D9;">├── package-lock.json</span></span>
<span class="line"><span style="color:#C9D1D9;">├── package.json</span></span>
<span class="line"><span style="color:#C9D1D9;">├── public</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">│   └── index.html</span></span>
<span class="line"><span style="color:#C9D1D9;">├── src</span></span>
<span class="line"><span style="color:#C9D1D9;">│   └── index.js</span></span>
<span class="line"><span style="color:#C9D1D9;">└── webpack.config.js</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>live server</code> 或 <code>serve</code> 来查看效果，可以看到 <code>Hello webpack!</code>。</p><p>🎉 恭喜，一个简单的 webpack demo 已经完成啦～</p>`,38),u={href:"https://github.com/ModyQyW/webpack4-demos/tree/master/demo01",target:"_blank",rel:"noopener noreferrer"};function m(C,F){const a=p("ExternalLinkIcon");return o(),c("div",null,[t,d,D,n("p",null,[s("首先安装 "),n("a",y,[s("nvm"),l(a)]),s("。nvm 是一个用于管理 node 版本的工具。")]),v,n("p",null,[s("参考源代码见 "),n("a",u,[s("modyqyw/webpack4-demos/demo01"),l(a)]),s("。")])])}const h=e(r,[["render",m],["__file","05.demo01.html.vue"]]);export{h as default};
