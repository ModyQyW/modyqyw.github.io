import{_ as l,M as e,p,q as o,R as n,t as s,N as c,a1 as i}from"./framework-7db056f4.js";const r={},t=i(`<h1 id="demo02-再看核心概念" tabindex="-1"><a class="header-anchor" href="#demo02-再看核心概念" aria-hidden="true">#</a> demo02 - 再看核心概念</h1><p>在这一部分，我们来稍微深入一下核心概念。</p><h2 id="再看入口-entry" tabindex="-1"><a class="header-anchor" href="#再看入口-entry" aria-hidden="true">#</a> 再看入口 entry</h2><p>一开始我们说到，<code>webpack</code> 会分析依赖生成依赖图，而分析依赖生成依赖图的起点就由 <code>entry</code> 指定。</p><p><img src="https://ae01.alicdn.com/kf/Hc2861d3d0e2b4ad89bfab9c37be5ecbcK.jpg" alt="webpack示意图"></p><p>单页面应用 SPA 只有一个入口，也就是说，<code>entry</code> 是一个字符串 string 或一个对象 object。多页面应用 MPA 有多个入口，<code>entry</code> 只能是一个对象 object。demo01 里的配置就是一个 SPA 的配置。</p><p>demo01 中 <code>entry</code> 的写法等同于下面的代码，也就是说，单入口写成字符串形式的时候，实际上会转换成对象形式，默认的 key 是 <code>main</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">path</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    main: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.js&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>context</code> 可能会跟 <code>entry</code> 一起使用，它可以指定 <code>entry</code> 的基本路径。对于 MPA，使用 <code>context</code> 往往能使 <code>entry</code> 更简洁。下面是一个示例。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">path</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  context: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: </span><span style="color:#A5D6FF;">&#39;./index.js&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>考虑到实际开发时必要的工程化，我们有必要把 <code>webpack</code> 配置相关的文件放到一个单独的文件夹内，方便修改。</p><p>我们先把没有使用到 <code>context</code> 的 <code>webpack.config.js</code> 移动到 <code>\${PROJECT_DIR}/config</code> 文件夹中，再指定 <code>entry</code> 的 key 为 <code>app</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">path</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    app: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.js&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>移动配置文件后，就需要修改 <code>package.json</code> 里的命令，手动指定配置文件了。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;build&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;webpack --config ./config/webpack.config.js&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="再看输出-output" tabindex="-1"><a class="header-anchor" href="#再看输出-output" aria-hidden="true">#</a> 再看输出 output</h2><p><code>webpack</code> 构建的结果如何输出由 <code>output</code> 指定。</p><p>SPA 可以直接指定 <code>output.filename</code> 和 <code>output.path</code>，像之前的示例一样，但更好的方法是使用对应的 <code>chunk</code> 的名称来给文件命名，而不是简单直接地使用固定名称。</p><p><code>entry</code> 目前只会对应一个 <code>chunk</code>，而这个 <code>chunk</code> 的名称就是 <code>entry</code> 的键，也就是 <code>app</code>。</p><p>我们修改一下 <code>output</code> 的配置，使得 <code>entry</code> 指定的文件构建出来之后跟随 <code>entry</code> 的 key。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">path</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;path&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  entry: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    app: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;src&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;index.js&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  output: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    path: path.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;dist&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    filename: </span><span style="color:#A5D6FF;">&#39;[name].js&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>output.filename = &#39;[name].js&#39;</code> 表示使用对应的 <code>chunk</code> 的名称来给文件命名。</li></ul><h2 id="再看插件-plugin" tabindex="-1"><a class="header-anchor" href="#再看插件-plugin" aria-hidden="true">#</a> 再看插件 plugin</h2><p><code>plugin</code> 用来增强 <code>webpack</code> 功能，比如优化打包文件，管理资源，注入环境变量等等，它作用于整个构建过程。</p><p>前面的例子中，我们用到了 <code>copy-webpack-plugin</code>，<code>html-webpack-plugin</code> 一些相对来说比较简单的 <code>plugin</code>。</p><p>每个 <code>plugin</code> 都需要放到 <code>plugins</code> 字段数组里，顺序一般不影响，具体的配置需要去查询对应的文档。</p><h2 id="再看加载器-loader" tabindex="-1"><a class="header-anchor" href="#再看加载器-loader" aria-hidden="true">#</a> 再看加载器 loader</h2><p>因为 <code>webpack</code> 默认只支持解析 <code>.js</code> 和 <code>.json</code> 文件，所以项目中使用到的其他文件，比如图片文件、字体文件、样式文件等，就只能使用 <code>loader</code> 解析。</p><p>下面会关注一些常用的 <code>loader</code>。</p><h3 id="js-语法和特性相关的-loader" tabindex="-1"><a class="header-anchor" href="#js-语法和特性相关的-loader" aria-hidden="true">#</a> js 语法和特性相关的 loader</h3><p>因为 <code>webpack</code> 本身并不支持解析 es6+ 语法，所以要使用 es6+ 语法，我们就需要使用 <code>babel</code> 和 <code>babel-loader</code> 来解析。</p><p><code>babel</code> 的一个主要作用就是把新语法转换成旧语法，也就是我们常说的语法转换，比如把箭头函数转换成 <code>function</code>。<code>babel-loader</code> 使得 <code>webpack</code> 在构建过程中能使用 <code>babel</code> 处理相关的文件。</p><p>首先还是要安装相关的依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm i @babel/runtime@~7.14.6</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i core-js@~3.15.2</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i react@~17.0.2</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i react-dom@~17.0.2</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i regenerator-runtime@~0.13.7</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @babel/cli@~7.14.5 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @babel/core@~7.14.6 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @babel/plugin-transform-runtime@~7.14.5 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @babel/preset-env@~7.14.7 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @babel/preset-react@~7.14.5 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i babel-loader@~8.2.2 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @types/react@~17.0.14 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @types/react-dom@~17.0.9 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i @types/node@~16.3.3 -D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后修改 <code>webpack</code> 配置。不要忘记，对于 <code>webpack</code> 来说，所有文件都可以看成一个模块，所以需要在模块对应的字段下写配置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// js/jsx 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">jsx</span><span style="color:#FF7B72;">?$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 只处理 src 里面的 js/jsx 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        include:</span><span style="color:#A5D6FF;"> /src/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 使用 babel-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [{ loader: </span><span style="color:#A5D6FF;">&#39;babel-loader&#39;</span><span style="color:#C9D1D9;"> }],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>test: /\\.jsx?$/</code> 表示只处理 <code>.js</code> 和 <code>.jsx</code> 文件。</li><li><code>include: /src/</code> 表示只处理 <code>src</code> 里面的 <code>.js</code> 和 <code>.jsx</code> 文件，这能够有效地提高效率，同时避免可能存在的二次编译问题。一般来说，<code>node_modules</code> 里面的 <code>.js</code> 和 <code>.jsx</code> 文件都会直接支持 es5，所以不需要处理。</li><li>你也可以使用 <code>exclude</code> 来指定不需要处理的文件，它的优先级比 <code>include</code> 更高。</li></ul><p>修改完 <code>webpack</code> 配置后，我们还需要配置 <code>babel</code>，让它根据我们的需求转换语法。我们创建 <code>\${PROJECT_DIR}/babel.config.json</code> 作为 <code>babel</code> 的配置文件。</p><p>要支持 es6+ 语法非常简单，只需要直接使用的 <code>@babel/preset-env</code>。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;presets&quot;</span><span style="color:#C9D1D9;">: [</span><span style="color:#A5D6FF;">&quot;@babel/preset-env&quot;</span><span style="color:#C9D1D9;">]</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但 <code>@babel/preset-env</code> 默认的配置往往不能准确满足项目需求。一个比较常见的项目需求是支持特定的浏览器和特定的浏览器版本，比如支持 IE 11。</p><p>这个时候，我们就需要向 <code>@babel/preset-env</code> 说明目标浏览器，也就是语法转换后的代码能够跑在什么浏览器上。</p><p>我们可以用 <code>\${PROJECT_DIR}/.browserslistrc</code> 文件来说明目标浏览器。<code>.browserslistrc</code> 文件是一个特殊的依赖于 <code>browserslist</code> 的文件，它的内容说明了项目的目标浏览器，会被 <code>@babel/preset-env</code> 读取并使用。</p><p>我们为 <code>\${PROJECT_DIR}/.browserslistrc</code> 添加以下内容。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;"> 0.2%</span></span>
<span class="line"><span style="color:#C9D1D9;">last 3 versions</span></span>
<span class="line"><span style="color:#C9D1D9;">not dead</span></span>
<span class="line"><span style="color:#C9D1D9;">chrome </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">= 70</span></span>
<span class="line"><span style="color:#C9D1D9;">firefox </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">= 68</span></span>
<span class="line"><span style="color:#C9D1D9;">safari </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">= 13</span></span>
<span class="line"><span style="color:#C9D1D9;">ie </span><span style="color:#FF7B72;">&gt;</span><span style="color:#C9D1D9;">= 11</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>&gt; 0.2%</code> 表示需要支持使用率超过 0.2% 的浏览器。</li><li><code>last 3 versions</code> 表示需要支持浏览器的最近 3 个版本。</li><li><code>not dead</code> 表示浏览器在最近 24 个月内还得到过官方的支持。</li><li><code>chrome &gt;= 70</code> 表示 chrome 的版本需要不小于 70。</li><li><code>firefox &gt;= 68</code> 表示 firefox 的版本需要不小于 68。</li><li><code>safari &gt;= 13</code> 表示 safari 的版本需要不小于 13。</li><li><code>ie &gt;= 11</code> 表示 ie 的版本需要不小于 11。</li></ul><p>上面的条件取并集，就是需要支持的浏览器范围。</p><p>说明目标浏览器之后，<code>babel</code> 在转换语法的时候会更加精准。它会把目标浏览器不支持的 es6+ 语法转换成 es5 语法，同时保留目标浏览器支持的 es6+ 语法。</p><p>但是如果转换后的代码中存在浏览器不支持的特性，比如 <code>Promise</code>，那该怎么办呢？这个时候，<code>babel</code> 的另一个作用——自动补齐特性——就很好地解决了这个问题。</p><p>polyfill 指的是能够提供一些浏览器本身没有的新特性的 js 代码包。我们可以配置 <code>babel</code> 自动引入 polyfill 来自动补齐目标浏览器的特性。</p><p><code>@babel/preset-env</code> 默认只会转换语法，我们需要手动配置来启用自动补全特性的功能。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;presets&quot;</span><span style="color:#C9D1D9;">: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#A5D6FF;">&quot;@babel/preset-env&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;useBuiltIns&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;usage&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;corejs&quot;</span><span style="color:#C9D1D9;">: { </span><span style="color:#7EE787;">&quot;version&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#7EE787;">&quot;proposals&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;"> }</span></span>
<span class="line"><span style="color:#C9D1D9;">      }</span></span>
<span class="line"><span style="color:#C9D1D9;">    ]</span></span>
<span class="line"><span style="color:#C9D1D9;">  ]</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>useBuiltIns</code> 指定 <code>@babel/preset-env</code> 怎么处理 polyfill。 <ul><li>默认地，<code>useBuiltIns</code> 的值是 <code>false</code>，也就是不处理 polyfill。</li><li><code>useBuiltIns</code> 可以指定成 <code>entry</code>，这时候我们需要手动地在项目入口引入 <code>core-js</code> 和 <code>regenerator-runtime</code>，这种情况较为少见。</li><li>指定成 <code>usage</code> 是一般情况下更好的选择，这时候我们无需手动引入，<code>babel/preset-env</code> 会为我们根据目标浏览器做相关的引入。</li></ul></li><li><code>core-js</code> 指定 <code>@babel/preset-env</code> 使用什么版本的 <code>core-js</code>，只有 <code>useBuiltIns</code> 的值是 <code>entry</code> 或 <code>usage</code> 的时候起作用。 <ul><li>默认地，<code>core-js</code> 的值是 2，表示使用 <code>core-js</code> v2。</li><li>指定成 3 是更好的选择，因为 <code>core-js</code> v3 提供了更多的 polyfill，同时减少了全局污染。</li><li>只指定版本，就只会引入稳定的特性。要引入提案特性，可以指定 <code>&quot;proposals&quot;: true</code>，这样就可以使用 <code>core-js</code> v3 已经支持的提案（一般已经足够稳定）。</li></ul></li></ul><p>这时候，<code>babel</code> 会为我们自动引入 <code>core-js</code> v3 和 <code>regenerator-runtime</code> 中和项目代码关联的部分，自动补全浏览器特性。</p><p>但使用这样的配置构建出来的代码还不能投入到生产环境中。自动补全浏览器特性之后可能会使得每个文件头部都增加了相同的代码，比如多个文件都使用了 <code>Promise</code>，转译之后就会在这些文件的头部都引入相同的 <code>Promise</code> 相关的 polyfill。这些重复的代码会影响最终构建包的体积，在实际开发中是难以接受的。</p><p>我们可以使用 <code>@babel/plugin-transform-runtime</code> 来抽离这些重复的 polyfill 代码，把它们放到一起，进一步压缩最终构建包的体积。代码里面用到对应功能的时候，会自动引入对应的 polyfill。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;presets&quot;</span><span style="color:#C9D1D9;">: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#A5D6FF;">&quot;@babel/preset-env&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;useBuiltIns&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;usage&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;corejs&quot;</span><span style="color:#C9D1D9;">: { </span><span style="color:#7EE787;">&quot;version&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#7EE787;">&quot;proposals&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;"> }</span></span>
<span class="line"><span style="color:#C9D1D9;">      }</span></span>
<span class="line"><span style="color:#C9D1D9;">    ]</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;plugins&quot;</span><span style="color:#C9D1D9;">: [</span><span style="color:#A5D6FF;">&quot;@babel/plugin-transform-runtime&quot;</span><span style="color:#C9D1D9;">]</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了 es6+ 的语法，我们还想支持 <code>react</code> 语法。我们也可以用 <code>babel</code> 来解析 <code>react</code> 代码，只需要根据 <code>@babel/preset-react</code> 的文档配置就可以了。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;presets&quot;</span><span style="color:#C9D1D9;">: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#A5D6FF;">&quot;@babel/preset-env&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;useBuiltIns&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;usage&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;corejs&quot;</span><span style="color:#C9D1D9;">: { </span><span style="color:#7EE787;">&quot;version&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">3</span><span style="color:#C9D1D9;">, </span><span style="color:#7EE787;">&quot;proposals&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;"> }</span></span>
<span class="line"><span style="color:#C9D1D9;">      }</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#A5D6FF;">&quot;@babel/preset-react&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;env&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;development&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#7EE787;">&quot;presets&quot;</span><span style="color:#C9D1D9;">: [[</span><span style="color:#A5D6FF;">&quot;@babel/preset-react&quot;</span><span style="color:#C9D1D9;">, { </span><span style="color:#7EE787;">&quot;development&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;"> }]]</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;plugins&quot;</span><span style="color:#C9D1D9;">: [</span><span style="color:#A5D6FF;">&quot;@babel/plugin-transform-runtime&quot;</span><span style="color:#C9D1D9;">]</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后可以修改 <code>\${PROJECT_DIR}/src/index.js</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/index.js</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> React </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> ReactDOM </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react-dom&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> App </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./App.jsx&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">ReactDOM.</span><span style="color:#D2A8FF;">render</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">React.StrictMode</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">App</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">React.StrictMode</span><span style="color:#C9D1D9;">&gt;,</span></span>
<span class="line"><span style="color:#C9D1D9;">  document.</span><span style="color:#D2A8FF;">getElementById</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;root&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不想写 <code>.jsx</code> 等后缀，我们可以手动设置 <code>resolve.extensions</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">  resolve: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// 不用写 .js，.jsx，.ts 和 .tsx</span></span>
<span class="line"><span style="color:#C9D1D9;">    extensions: [</span><span style="color:#A5D6FF;">&#39;.js&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;.jsx&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;.ts&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;.tsx&#39;</span><span style="color:#C9D1D9;">],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在 <code>App.jsx</code> 里使用 <code>react</code>，<code>react-dom</code>，<code>Promise</code> 以测试我们的配置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/App.jsx</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> React, { useEffect } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> iconWebpack </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./assets/webpack.png&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">App</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">useEffect</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        document.title </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;Hello World!&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">      }, </span><span style="color:#79C0FF;">5000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    });</span></span>
<span class="line"><span style="color:#C9D1D9;">  }, []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">span</span><span style="color:#C9D1D9;">&gt;Hello Webpack!&lt;/</span><span style="color:#7EE787;">span</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  );</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">App;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后构建并运行测试。如果一切正常，可以看到页面上会出现 <code>Hello Webpack!</code> 的文字，5 秒左右标签页的标题被修改成 <code>Hello World!</code>。ie 11 本身不支持 <code>Promise</code>，但在 ie 11 上测试也能有这样的效果，说明 <code>Promise</code> 已经被加入进去了。</p><p>已经支持了特定特性的浏览器不会再度引入对应的 polyfill。</p><p><code>@babel/plugin-transform-runtime</code> 也可以和 <code>core-js</code> 搭配使用，你可以自行尝试。</p><h3 id="样式相关的-loader" tabindex="-1"><a class="header-anchor" href="#样式相关的-loader" aria-hidden="true">#</a> 样式相关的 loader</h3><p>由于 <code>webpack</code> 本身并不支持解析 <code>.css</code>，<code>.sass</code> 和 <code>.scss</code> 文件，所以我们需要用 <code>loader</code> 去解析这些文件。要解析 <code>.less</code> 和 <code>.styl</code> 文件，相对应的 <code>loader</code> 的配置大同小异，参考对应文档摸索就可以了，这里不再演示。</p><p>首先还是要安装相关的依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm i zent@~9.8.0</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i babel-plugin-zent@~2.2.2 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i style-loader@~2.0.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i css-loader@~5.2.7 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i sass@~1.35.2 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i sass-loader@~10.2.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i resolve-url-loader@~3.1.4 -D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>css-loader</code> 能够把 <code>.css</code> 文件解析成 css 模块，而 <code>style-loader</code> 能够将 css 模块嵌入到文件中。</p><p>我们先在 <code>\${PROJECT_DIR}/src/index.js</code> 引入 <code>.css</code> 文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/index.js</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> React </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> ReactDOM </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react-dom&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> App </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./App&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./index.css&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">ReactDOM.</span><span style="color:#D2A8FF;">render</span><span style="color:#C9D1D9;">(</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;</span><span style="color:#7EE787;">React.StrictMode</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">App</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  &lt;/</span><span style="color:#7EE787;">React.StrictMode</span><span style="color:#C9D1D9;">&gt;,</span></span>
<span class="line"><span style="color:#C9D1D9;">  document.</span><span style="color:#D2A8FF;">getElementById</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;root&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建 <code>\${PROJECT_DIR}/src/index.css</code>，设置一些样式。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">/* \${PROJECT_DIR}/src/index.css */</span></span>
<span class="line"><span style="color:#7EE787;">*</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#79C0FF;">::before</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#79C0FF;">::after</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">box-sizing</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">border-box</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">padding</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">margin</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">min-width</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">1280</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">min-height</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">100</span><span style="color:#FF7B72;">%</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-family</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">-apple-system</span><span style="color:#C9D1D9;">, BlinkMacSystemFont, </span><span style="color:#A5D6FF;">&#39;Segoe UI&#39;</span><span style="color:#C9D1D9;">, Roboto, </span><span style="color:#A5D6FF;">&#39;Helvetica Neue&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">Helvetica</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#A5D6FF;">&#39;PingFang SC&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Hiragino Sans GB&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Microsoft YaHei&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;微软雅黑&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">Arial</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Noto Sans&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">sans-serif</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Apple Color Emoji&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Segoe UI Emoji&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Segoe UI Symbol&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Noto Color Emoji&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">-webkit-font-smoothing</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">antialiased</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">-moz-osx-font-smoothing</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">grayscale</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，我们修改一下 <code>webpack</code> 配置，增加对 <code>.css</code> 文件的解析。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  module: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// css 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">css</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 先使用 css-loader 再使用 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [{ loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> }, { loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;"> }],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>loader</code> 的调用顺序是从后往前的。上面的示例里，会先调用 <code>css-loader</code> 处理 <code>.css</code> 文件，再调用 <code>style-loader</code> 做进一步处理。</li></ul><p>重新构建并运行，我们可以在浏览器开发者工具中看到，样式已经作为 <code>&lt;style&gt;</code> 被插入到 <code>&lt;head&gt;</code> 标签里面。</p><p>处理 <code>.sass</code> 和 <code>.scss</code> 文件有少许的不同。<code>sass-loader</code> 会把 <code>.sass</code> 和 <code>.scss</code> 文件转换成 <code>.css</code> 文件，而 <code>.css</code> 文件的处理步骤就跟上面一致。所以，我们只需要复制粘贴，然后配置 <code>sass-loader</code> 就可以了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  module: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// css 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">css</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 先使用 css-loader 再使用 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [{ loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> }, { loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;"> }],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// sass/scss 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">s</span><span style="color:#79C0FF;">[ac]</span><span style="color:#A5D6FF;">ss</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 依次使用 sass-loader，css-loader 和 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;sass-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              sourceMap: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sass-loader</code> 会处理 <code>@import</code> 语句，所以我们还需要配置 <code>css-loader</code>，说明在 <code>css-loader</code> 之前还有 1 个 <code>loader</code> 会处理 <code>@import</code> 语句。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  module: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// css 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">css</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 先使用 css-loader 再使用 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [{ loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> }, { loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;"> }],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// sass/scss 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">s</span><span style="color:#79C0FF;">[ac]</span><span style="color:#A5D6FF;">ss</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 依次使用 sass-loader，css-loader 和 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              importLoaders: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;sass-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              sourceMap: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sass/scss 没有 url 重写的功能，所以我们还需要加入 <code>resolve-url-loader</code>，避免实际使用的时候出现 url 指向不正确的问题。<code>resolve-url-loader</code> 不会处理 <code>@import</code> 语句，所以不用再修改 <code>css-loader</code> 的 <code>importLoaders</code> 配置项。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  module: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// css 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">css</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 先使用 css-loader 再使用 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [{ loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> }, { loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;"> }],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// sass/scss 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">s</span><span style="color:#79C0FF;">[ac]</span><span style="color:#A5D6FF;">ss</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 依次使用 sass-loader，resolve-url-loader，css-loader 和 style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              importLoaders: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;resolve-url-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;sass-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              sourceMap: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们把 <code>index.css</code> 重命名为 <code>index.scss</code>，修改 <code>\${PROJECT_DIR}/src/index.js</code> 里面的引入。重新构建、测试，一切正常。</p><p>我们再来试着添加并使用 <code>zent</code> 这个组件库。我们修改 <code>\${PROJECT_DIR}/src/App.jsx</code>，加入栅格系统和带图标的按钮。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/App.jsx</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> React, { useEffect } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { LayoutRow </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> Row, LayoutCol </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> Col, LayoutGrid </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> Grid, Button, Icon } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;zent&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">App</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">useEffect</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        document.title </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;Hello World!&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">      }, </span><span style="color:#79C0FF;">5000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    });</span></span>
<span class="line"><span style="color:#C9D1D9;">  }, []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">Grid</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">Row</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">Col</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">span</span><span style="color:#FF7B72;">={</span><span style="color:#79C0FF;">24</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">          &lt;</span><span style="color:#7EE787;">Button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">type</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&quot;primary&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">Icon</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">type</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&quot;youzan&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            Hello Zent!</span></span>
<span class="line"><span style="color:#C9D1D9;">          &lt;/</span><span style="color:#7EE787;">Button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;/</span><span style="color:#7EE787;">Col</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;/</span><span style="color:#7EE787;">Row</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">Grid</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  );</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">App;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后修改 <code>\${PROJECT_DIR}/babel.config.json</code>，根据 <code>babel-plugin-zent</code> 说明加入按需加载的优化。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;plugins&quot;</span><span style="color:#C9D1D9;">: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#A5D6FF;">&quot;@babel/plugin-transform-runtime&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#A5D6FF;">&quot;zent&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;libraryName&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;zent&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;noModuleRewrite&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;automaticStyleImport&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#7EE787;">&quot;useRawStyle&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">true</span></span>
<span class="line"><span style="color:#C9D1D9;">      }</span></span>
<span class="line"><span style="color:#C9D1D9;">    ]</span></span>
<span class="line"><span style="color:#C9D1D9;">  ]</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新构建、测试，可以看到一个蓝色的按钮，按钮内左边是有赞的图标，文字是 <code>Hello Zent</code>。</p><p>但仅仅是解析 <code>.css</code>，<code>.sass</code> 和 <code>scss</code> 还远远不能达到实际的需求，我们往往会需要使用 css 新特性，或者压缩 css 代码，又或者为 css 属性添加浏览器前缀。这时候我们就需要使用 <code>postcss</code> 和 <code>postcss-loader</code>，不少人把 <code>postcss</code> 叫做 css 界的 <code>babel</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm i postcss@~8.3.5 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i postcss-loader@~4.3.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i autoprefixer@~10.3.1 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i postcss-preset-env@~6.7.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i cssnano@~5.0.6 -D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>webpack</code> 配置文件里使用 <code>postcss-loader</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  module: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// css 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">css</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 依次使用 postcss-loader，css-loader，style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              importLoaders: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;postcss-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// sass/scss 文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">s</span><span style="color:#79C0FF;">[ac]</span><span style="color:#A5D6FF;">ss</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 依次使用 sass-loader，resolve-url-loader，postcss-loader，css-loader，style-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;style-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;css-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              importLoaders: </span><span style="color:#79C0FF;">2</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;postcss-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          { loader: </span><span style="color:#A5D6FF;">&#39;resolve-url-loader&#39;</span><span style="color:#C9D1D9;"> },</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;sass-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              sourceMap: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>postcss-loader</code> 会处理 <code>@import</code> 语句，注意修改 <code>css-loader</code> 的 <code>importLoaders</code> 配置项。</li></ul><p>创建一个 <code>\${PROJECT_DIR}/postcss.config.js</code> 文件作为 <code>postcss</code> 的配置文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/postcss.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>空文件等同于没有配置 <code>postcss</code>。要让 <code>postcss</code> 处理 css，就需要使用插件。</p><p>浏览器厂商们有时会给实验性的或者非标准的 css 属性添加前缀，这样就可以让开发者进行试验，同时也不会使得标准化之后现有代码被破坏。</p><p>因为存在浏览器厂商自实现某些实验性的属性、停止更新浏览器导致没有浏览器跟随标准等情况，所以为 css 属性添加特定浏览器的前缀也带有了 polyfill 的意味。</p><p>手动添加前缀是相当麻烦的一件事情，使用 <code>autoprefixer</code> 插件可以让 <code>postcss</code> 自动为我们补全浏览器的样式前缀。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/postcss.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;autoprefixer&#39;</span><span style="color:#C9D1D9;">)],</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>无需额外的配置，<code>autoprefixer</code> 会自动寻找目标浏览器的说明，也就是 <code>\${PROJECT_DIR}/.browserslistrc</code>，并且根据目标浏览器自动地添加前缀。</p><p>而要处理某些 css 的新语法和新特性，我们就需要用到另外一个插件 <code>postcss-preset-env</code>。和 <code>@babel/preset-env</code> 类似，它可以为我们处理 css 的某些新语法和新特性，而且，它还内置了 <code>autoprefixer</code> 的功能。我们可以直接把 <code>autoprefixer</code> 换成 <code>postcss-preset-env</code>，<code>\${PROJECT_DIR}/.browserslistrc</code> 也会被自动地读取使用。</p><p>这时候，<code>postcss</code> 就会根据目标浏览器自动添加属性前缀、处理相对稳定的新语法和新特性了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/postcss.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;postcss-preset-env&#39;</span><span style="color:#C9D1D9;">)],</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认地，<code>postcss-preset-env</code> 会自动处理 stage 2+ 的新语法和新特性，你可以在它的官方网站中查看。</p><p>最后，<code>cssnano</code> 插件可以帮助我们压缩 <code>.css</code> 文件并且去除掉多余的注释，用法也同样很简单。但要注意，只有在生产环境下才需要压缩并去除注释，所以我们在生产环境时再引入 <code>cssnano</code>。</p><p>这里我们参考官方文档的配置，使用 <code>cssnano-preset-default</code>，配置移除所有注释。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/postcss.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  plugins: [</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;postcss-preset-env&#39;</span><span style="color:#C9D1D9;">),</span></span>
<span class="line"><span style="color:#C9D1D9;">    p<wbr>rocess.env.</span><span style="color:#79C0FF;">NODE_ENV</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;production&#39;</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">&amp;&amp;</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;cssnano&#39;</span><span style="color:#C9D1D9;">)({</span></span>
<span class="line"><span style="color:#C9D1D9;">        preset: [</span><span style="color:#A5D6FF;">&#39;default&#39;</span><span style="color:#C9D1D9;">, { discardComments: { removeAll: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;"> } }],</span></span>
<span class="line"><span style="color:#C9D1D9;">      }),</span></span>
<span class="line"><span style="color:#C9D1D9;">  ],</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你在加入 <code>cssnano</code> 前查看过生产环境下构建出来的 <code>.css</code> 文件，你会发现文件已经被压缩过了，只是注释没有被去掉。这是因为目前我们所有的 <code>.css</code> 文件都是由 <code>.scss</code> 编译而来，而在生产环境下，<code>sass</code> 依赖会给 <code>sass-loader</code> 指定 <code>outputStyle: &#39;compressed&#39;</code>，这就导致了我们得到的 <code>.css</code> 文件已经被压缩过一次，但注释仍然还在。</p><p>加入 <code>cssnano</code> 插件仍然是有必要的，因为 <code>.css</code> 文件依旧没有被压缩，而 <code>.css</code> 和 <code>.scss</code> 文件的注释也没有被去掉，<code>cssnano</code> 可以很好地完成这部分工作。</p><p>到此为止，<code>postcss</code> 已经能自动处理我们的 css 代码中用到的新语法和新特性，会自动添加属性前缀，能压缩并移除注释了。</p><p>某些样式库可能需要我们引入对应的组件样式，比如上面的 <code>zent</code>。我们在配置对应的 <code>loader</code> 的时候没有像配置 <code>babel-loader</code> 一样只处理 <code>src</code> 内的样式文件，这么做是有原因的。</p><ul><li>比起 js/jsx 文件的内容，样式文件的内容往往更小，处理起来不会耗费过多资源。</li><li>样式文件本身有可能没被处理过，无论有没有被处理过，重新处理一次的结果也不会有任何影响，由我们的 <code>loader</code> 处理一次是保险的选择。</li></ul><h3 id="资产相关的-loader" tabindex="-1"><a class="header-anchor" href="#资产相关的-loader" aria-hidden="true">#</a> 资产相关的 loader</h3><p>一般我们把项目使用到的图片、字体、音频、视频之类的文件叫做项目资产文件，它们一般不能被直接修改。</p><p>最常用的处理资产的 <code>loader</code> 就是 <code>file-loader</code> 和 <code>url-loader</code>。<code>url-loader</code> 是 <code>file-loader</code> 的升级版，增加了文件大小的上限配置，达到大小上限时会自动使用 <code>file-loader</code>，没达到大小上限的时候，会把文件转换成 base64 数据，然后硬编码到代码里。</p><p>为什么要转换成 base64 数据硬编码进代码呢？一方面，直接硬编码进代码可以减轻在读取该部分文件时的页面闪烁，提高用户体验，另一方面也可以减少网络请求，降低服务器压力。</p><p>如果 base64 数据太多太大，加载网页的速度依旧会变慢，所以不是所有文件都适宜转换成 base64 数据。</p><p>下面来演示如何加入和使用这两个 <code>loader</code>。首先还是安装依赖。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm i file-loader@~6.2.0 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i url-loader@~4.1.1 -D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>直接修改配置文件。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// 指定 loader</span></span>
<span class="line"><span style="color:#C9D1D9;">  module: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    rules: [</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 图片文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">(png</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">jpg</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">jpeg</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">gif)</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 使用 url-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;url-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              </span><span style="color:#8B949E;">// 2 MB 上限</span></span>
<span class="line"><span style="color:#C9D1D9;">              limit: </span><span style="color:#79C0FF;">2097152</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">              </span><span style="color:#8B949E;">// 放进 \${output.path}/img 文件夹里</span></span>
<span class="line"><span style="color:#C9D1D9;">              outputPath: </span><span style="color:#A5D6FF;">&#39;img&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">              </span><span style="color:#8B949E;">// 使用 \${output.path}/img 文件夹里的图片</span></span>
<span class="line"><span style="color:#C9D1D9;">              publicPath: </span><span style="color:#A5D6FF;">&#39;img&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">      {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 字体文件</span></span>
<span class="line"><span style="color:#C9D1D9;">        test:</span><span style="color:#A5D6FF;"> /</span><span style="color:#7EE787;font-style:italic;">\\.</span><span style="color:#A5D6FF;">(woff</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">woff2</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">eot</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">ttf</span><span style="color:#FF7B72;">|</span><span style="color:#A5D6FF;">otf)</span><span style="color:#FF7B72;">$</span><span style="color:#A5D6FF;">/</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// 使用 url-loader 处理</span></span>
<span class="line"><span style="color:#C9D1D9;">        use: [</span></span>
<span class="line"><span style="color:#C9D1D9;">          {</span></span>
<span class="line"><span style="color:#C9D1D9;">            loader: </span><span style="color:#A5D6FF;">&#39;url-loader&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            options: {</span></span>
<span class="line"><span style="color:#C9D1D9;">              limit: </span><span style="color:#79C0FF;">2097152</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">              outputPath: </span><span style="color:#A5D6FF;">&#39;fonts&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">              publicPath: </span><span style="color:#A5D6FF;">&#39;fonts&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">            },</span></span>
<span class="line"><span style="color:#C9D1D9;">          },</span></span>
<span class="line"><span style="color:#C9D1D9;">        ],</span></span>
<span class="line"><span style="color:#C9D1D9;">      },</span></span>
<span class="line"><span style="color:#C9D1D9;">    ],</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">...</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>指定 <code>limit: 2097152</code> 后，超过 2 MB 时，<code>url-loader</code> 会自动降级成 <code>file-loader</code>。在实际应用里可以自行调整这个限制。</li><li><code>outputPath</code> 和 <code>publicPath</code> 是和项目中配置的输出路径 <code>output.path</code> 相关的，在这个项目里，也就是和 <code>\${PROJECT_DIR}/dist</code> 相关。像上面的配置，最终构建结果是图片放进了 <code>\${PROJECT_DIR}/dist/img</code> 里，而字体放进了 <code>\${PROJECT_DIR}/dist/fonts</code> 里，使用资产的时候代码会自动到对应的文件夹里获取。</li><li>把图片和字体放入各自的文件夹中，主要目的是区分开不同类型的文件，避免所有文件都直接放在 <code>\${PROJECT_DIR}/dist</code>。当然也可以把图片、字体等都放入到 <code>\${PROJECT_DIR}/dist/assets</code> 里，只需要注意修改 <code>outputPath</code> 和 <code>publicPath</code> 即可。</li></ul><p>放一个图片文件在 <code>\${PROJECT_DIR}/src/assets</code> 里面（我这里放了 <code>webpack.png</code>），然后在 <code>\${PROJECT_DIR}/src/App.jsx</code> 里引入、使用它。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/App.jsx</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> React, { useEffect } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;react&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { LayoutRow </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> Row, LayoutCol </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> Col, LayoutGrid </span><span style="color:#FF7B72;">as</span><span style="color:#C9D1D9;"> Grid, Button, Icon } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;zent&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> iconWebpack </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./assets/webpack.png&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;./App.scss&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">App</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">useEffect</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">      </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        document.title </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;Hello World!&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">();</span></span>
<span class="line"><span style="color:#C9D1D9;">      }, </span><span style="color:#79C0FF;">5000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">    });</span></span>
<span class="line"><span style="color:#C9D1D9;">  }, []);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> (</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;</span><span style="color:#7EE787;">Grid</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;</span><span style="color:#7EE787;">Row</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;</span><span style="color:#7EE787;">Col</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">span</span><span style="color:#FF7B72;">={</span><span style="color:#79C0FF;">24</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">          &lt;</span><span style="color:#7EE787;">img</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">className</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&quot;icon&quot;</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">src</span><span style="color:#FF7B72;">={</span><span style="color:#C9D1D9;">iconWebpack</span><span style="color:#FF7B72;">}</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">          &lt;</span><span style="color:#7EE787;">Button</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">type</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&quot;primary&quot;</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            &lt;</span><span style="color:#7EE787;">Icon</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">type</span><span style="color:#FF7B72;">=</span><span style="color:#A5D6FF;">&quot;youzan&quot;</span><span style="color:#C9D1D9;"> /&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">            Hello Zent!</span></span>
<span class="line"><span style="color:#C9D1D9;">          &lt;/</span><span style="color:#7EE787;">Button</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">        &lt;/</span><span style="color:#7EE787;">Col</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">      &lt;/</span><span style="color:#7EE787;">Row</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">    &lt;/</span><span style="color:#7EE787;">Grid</span><span style="color:#C9D1D9;">&gt;</span></span>
<span class="line"><span style="color:#C9D1D9;">  );</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">App;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/App.scss</span></span>
<span class="line"><span style="color:#79C0FF;">.icon</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">display</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">inline-block</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">width</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">32</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">height</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">32</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">margin-right</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">8</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">vertical-align</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">middle</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>放一个字体文件在 <code>\${PROJECT_DIR}/src/assets</code> 里面（我这里放入了阿里普惠体的字体文件 <code>Alibaba-PuHuiTi-Regular.ttf</code>），然后在 <code>\${PROJECT_DIR}/src/index.scss</code> 里引入、使用它。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/src/index.scss</span></span>
<span class="line"><span style="color:#FF7B72;">@font-face</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-family</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&#39;Alibaba PuHuiTi&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">src</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">url</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;./assets/Alibaba-PuHuiTi-Regular.ttf&#39;</span><span style="color:#C9D1D9;">) </span><span style="color:#79C0FF;">format</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;ttf&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">*</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#79C0FF;">::before</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#79C0FF;">::after</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">box-sizing</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">border-box</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">padding</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">margin</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">html</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#7EE787;">body</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">min-width</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">1280</span><span style="color:#FF7B72;">px</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">min-height</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">100</span><span style="color:#FF7B72;">%</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">font-family</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&#39;Alibaba PuHuiTi&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">-apple-system</span><span style="color:#C9D1D9;">, BlinkMacSystemFont, </span><span style="color:#A5D6FF;">&#39;Segoe UI&#39;</span><span style="color:#C9D1D9;">, Roboto, </span><span style="color:#A5D6FF;">&#39;Helvetica Neue&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">Helvetica</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;PingFang SC&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Hiragino Sans GB&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Microsoft YaHei&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;微软雅黑&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#79C0FF;">Arial</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Noto Sans&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">sans-serif</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Apple Color Emoji&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Segoe UI Emoji&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Segoe UI Symbol&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;Noto Color Emoji&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">-webkit-font-smoothing</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">antialiased</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">-moz-osx-font-smoothing</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">grayscale</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新构建，可以看到 <code>\${PROJECT_DIR}/dist</code> 目录下多出了一个文件夹 <code>fonts</code>，里面是一个字体文件，名字被修改成一串字符串（也就是文件指纹，后面会做进一步解释），而图片文件被硬编码进代码里。测试一切正常。</p><p><code>url-loader</code> 和 <code>file-loader</code> 只会处理 <code>.js</code> 中引用的图片。如果需要在 <code>.html</code> 里引用，那就需要使用 <code>html-loader</code> 处理；如果需要在 <code>.vue</code> 里引用，那就需要使用 <code>vue-loader</code> 处理。</p><p>或许你还想了解 svg 该如何处理，不妨自己去查查资料，亲手实践一下。</p><h2 id="再看模式-mode" tabindex="-1"><a class="header-anchor" href="#再看模式-mode" aria-hidden="true">#</a> 再看模式 mode</h2><p>指定不同的模式，<code>webpack</code> 会自动启用不同的优化。默认模式是 <code>production</code>，默认取值范围是 <code>development</code>，<code>production</code> 和 <code>none</code>。</p><p>现在，我们每一次查看代码效果，都要执行 <code>npm run build</code>，然后用 <code>live server</code> 或 <code>serve</code> 启动。这相当麻烦，尤其是开发的时候，这么做会耗费很多时间，而且开发时也不应该使用 <code>production</code> 模式，而应该使用 <code>development</code> 模式。</p><p><code>webpack-dev-server</code> 帮我们解决了这个问题。使用 <code>webpack-dev-server</code> 可以不刷新浏览器就看到我们开发的时候修改代码后的结果（这也就是我们常说的热更新），也不会生成文件放到 <code>dist</code> 目录下。实际上，生成文件会被放到内存里。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">npm i cross-env@~7.0.3 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i webpack-dev-server@~3.11.2 -D</span></span>
<span class="line"><span style="color:#C9D1D9;">npm i webpack-merge@~5.8.0 -D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还要根据环境来使用不同的构建配置。基于可维护性考虑，我们应该拆分出不同环境的构建配置文件，最终根据环境暴露出对应环境的构建配置。</p><p>首先修改 <code>package.json</code>。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">&quot;scripts&quot;</span><span style="color:#C9D1D9;">: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;dev&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;cross-env NODE_ENV=development webpack serve --config ./config/webpack.config.js --progress&quot;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#7EE787;">&quot;build&quot;</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&quot;cross-env NODE_ENV=production webpack --config ./config/webpack.config.js&quot;</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA198;">...</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>cross-env</code> 可以修改 <code>p<wbr>rocess.env.XXX</code> 的值（在这里，<code>XXX</code> 就是 <code>NODE_ENV</code>），进而供我们确认环境。</li><li><code>webpack serve</code> 会自动调用 <code>webpack-dev-server</code>。</li></ul><p>接着，我们把原本 <code>\${PROJECT_DIR}/config/webpack.config.js</code> 中除 <code>mode</code> 之外的内容抽离出来，放到 <code>\${PROJECT_DIR}/config/webpack.base.js</code> 里。这部分内容作为基础配置，会被所有环境的配置所引用。</p><p>再新建两个配置文件，内容列写在下面。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.dev.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  mode: </span><span style="color:#A5D6FF;">&#39;development&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  devServer: {</span></span>
<span class="line"><span style="color:#C9D1D9;">    hot: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    quiet: </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  },</span></span>
<span class="line"><span style="color:#C9D1D9;">  devtool: </span><span style="color:#A5D6FF;">&#39;eval-cheap-source-map&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>devServer.hot = true</code> 表示开启 <code>webpack-dev-server</code> 的热更新。</li><li><code>devServer.quiet = true</code> 表示减少构建输出的信息显示。</li><li><code>devtool</code> 可以确定错误对应的代码，能帮助调试，这里指定为 <code>source-map</code>。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.prod.js</span></span>
<span class="line"><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  mode: </span><span style="color:#A5D6FF;">&#39;production&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  devtool: </span><span style="color:#A5D6FF;">&#39;source-map&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后修改 <code>\${PROJECT_DIR}/config/webpack.config.js</code>，让它在不同环境暴露不同的构建配置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#8B949E;">// \${PROJECT_DIR}/config/webpack.config.js</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> { </span><span style="color:#79C0FF;">merge</span><span style="color:#C9D1D9;"> } </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;webpack-merge&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">baseConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;./webpack.base.js&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">devConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;./webpack.dev.js&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">prodConfig</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">require</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;./webpack.prod.js&#39;</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (p<wbr>rocess.env.</span><span style="color:#79C0FF;">NODE_ENV</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">===</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;development&#39;</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">merge</span><span style="color:#C9D1D9;">(baseConfig, devConfig);</span></span>
<span class="line"><span style="color:#C9D1D9;">} </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">module</span><span style="color:#C9D1D9;">.</span><span style="color:#79C0FF;">exports</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">merge</span><span style="color:#C9D1D9;">(baseConfig, prodConfig);</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用 <code>webpack-merge</code> 组合基本配置和特定环境配置。</li></ul><p>最后分别执行 <code>npm run dev</code> 和 <code>npm run build</code> 做测试，一切正常。下面是最终项目目录（省略了 <code>node_modules</code>）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#79C0FF;">.</span></span>
<span class="line"><span style="color:#C9D1D9;">├── babel.config.json</span></span>
<span class="line"><span style="color:#C9D1D9;">├── config</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── webpack.base.js</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── webpack.config.js</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── webpack.dev.js</span></span>
<span class="line"><span style="color:#C9D1D9;">│   └── webpack.prod.js</span></span>
<span class="line"><span style="color:#C9D1D9;">├── dist</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── app.js</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── app.js.map</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── fonts</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── index.html</span></span>
<span class="line"><span style="color:#C9D1D9;">│   └── report.html</span></span>
<span class="line"><span style="color:#C9D1D9;">├── package-lock.json</span></span>
<span class="line"><span style="color:#C9D1D9;">├── package.json</span></span>
<span class="line"><span style="color:#C9D1D9;">├── postcss.config.js</span></span>
<span class="line"><span style="color:#C9D1D9;">├── public</span></span>
<span class="line"><span style="color:#C9D1D9;">│   ├── favicon.ico</span></span>
<span class="line"><span style="color:#C9D1D9;">│   └── index.html</span></span>
<span class="line"><span style="color:#C9D1D9;">└── src</span></span>
<span class="line"><span style="color:#C9D1D9;">    ├── assets</span></span>
<span class="line"><span style="color:#C9D1D9;">    ├── App.jsx</span></span>
<span class="line"><span style="color:#C9D1D9;">    ├── App.scss</span></span>
<span class="line"><span style="color:#C9D1D9;">    ├── index.js</span></span>
<span class="line"><span style="color:#C9D1D9;">    └── index.scss</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于<code>react</code>，还可以加入<code>react-hot-loader</code>进一步提升使用体验。有兴趣可以查阅相关资料学习。</p><p>🎉 恭喜，你的第二个 webpack demo 已经完成啦～</p>`,157),d={href:"https://github.com/ModyQyW/webpack4-demos/tree/master/demo02",target:"_blank",rel:"noopener noreferrer"};function D(y,v){const a=e("ExternalLinkIcon");return p(),o("div",null,[t,n("p",null,[s("参考源代码见 "),n("a",d,[s("modyqyw/webpack4-demos/demo02"),c(a)]),s("。")])])}const C=l(r,[["render",D],["__file","06.demo02.html.vue"]]);export{C as default};
